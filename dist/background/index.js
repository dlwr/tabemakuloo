var h=Object.defineProperty;var p=(o,t,e)=>t in o?h(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var c=(o,t,e)=>p(o,typeof t!="symbol"?t+"":t,e);import{b as i}from"../chunks/browser-polyfill.DX5UB71L.js";class d{validatePostData(t){var e,r;if(!((e=t.title)!=null&&e.trim()))throw new Error("Title is required");if(!((r=t.url)!=null&&r.trim()))throw new Error("URL is required");try{new URL(t.url)}catch{throw new Error("Invalid URL format")}}createErrorResult(t){return{service:this.name,success:!1,error:t}}createSuccessResult(t){return{service:this.name,success:!0,url:t}}}class w extends d{constructor(){super(...arguments);c(this,"name","Tumblr")}async authenticate(){try{return(await fetch("https://www.tumblr.com/api/v2/user/info",{credentials:"include"})).ok}catch{return!1}}async post(e){var r;try{this.validatePostData(e);const n=await this.getFormKey(),s=this.detectPostType(e),a=this.preparePostData(e,s,n),u=await fetch("https://www.tumblr.com/svc/post/update",{method:"POST",credentials:"include",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams(a).toString()});if(!u.ok)return this.createErrorResult("Failed to post to Tumblr");const l=(r=(await u.json()).response)==null?void 0:r.id;return this.createSuccessResult(l?`https://www.tumblr.com/posts/${l}`:void 0)}catch(n){return this.createErrorResult(n instanceof Error?n.message:"Unknown error")}}supports(e){return["text","link","image","video","photo"].includes(e)}detectPostType(e){return e.image?"photo":e.url&&e.url.trim()!==""?"link":"text"}async getFormKey(){const e=await fetch("https://www.tumblr.com/svc/secure/post_form_key",{credentials:"include"});if(!e.ok)throw new Error("Failed to get form key");return(await e.json()).response.form_key}preparePostData(e,r,n){var a;const s={form_key:n,post_type:r,channel_id:"main",context:"channel",tags:((a=e.tags)==null?void 0:a.join(","))??""};switch(r){case"text":return{...s,"post[one]":e.title,"post[two]":e.description??""};case"link":return{...s,"post[one]":e.url,"post[two]":e.title,"post[three]":e.description??""};case"photo":return{...s,"post[photoset_layout]":"","post[one]":e.image??"","post[two]":e.description??""};default:return s}}}class m{constructor(){c(this,"tumblrService");this.tumblrService=new w,this.init()}init(){this.setupContextMenus(),this.setupEventListeners()}setupContextMenus(){i.contextMenus.create({id:"post-link",title:"Tabemakulooで投稿",contexts:["link","selection","page"]})}setupEventListeners(){i.contextMenus.onClicked.addListener(this.handleContextMenuClick.bind(this)),i.runtime.onMessage.addListener(this.handleMessage.bind(this))}async handleContextMenuClick(t){const r=(await i.tabs.query({active:!0,currentWindow:!0}))[0];r!=null&&r.id&&await i.tabs.sendMessage(r.id,{type:"CONTEXT_MENU_CLICK",data:t})}async handleMessage(t){try{const e=t;switch(e.type){case"POST_TO_SERVICES":return await this.handlePostToServices(e.data);case"CHECK_AUTH":return await this.handleCheckAuth(e.data);default:return console.log("Unknown message type:",e.type),{success:!1,error:"Unknown message type"}}}catch(e){return console.error("Background message handler error:",e),{success:!1,error:"Internal error"}}}async handlePostToServices(t){const{postData:e,services:r}=t,n=[];if(r.includes("tumblr"))try{const s=await this.tumblrService.post(e);n.push(s)}catch(s){n.push({service:"Tumblr",success:!1,error:s instanceof Error?s.message:"Unknown error"})}return{results:n}}async handleCheckAuth(t){const{service:e}=t;return e==="tumblr"?{authenticated:await this.tumblrService.authenticate()}:{authenticated:!1}}}new m;
//# sourceMappingURL=index.js.map
