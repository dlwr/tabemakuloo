{"version":3,"file":"index.js","sources":["../../src/popup/index.ts"],"sourcesContent":["import browser from 'webextension-polyfill'\nimport type {PostData} from '@/types'\n\nclass PopupUI {\n  private readonly titleInput: HTMLInputElement\n  private readonly descriptionTextarea: HTMLTextAreaElement\n  private readonly tagsInput: HTMLInputElement\n  private readonly postButton: HTMLButtonElement\n\n  constructor() {\n    this.titleInput = document.querySelector('#title')!\n    this.descriptionTextarea = document.querySelector('#description')!\n    this.tagsInput = document.querySelector('#tags')!\n    this.postButton = document.querySelector('#postBtn')!\n\n    void this.init()\n  }\n\n  private async init(): Promise<void> {\n    await this.loadCurrentPageData()\n    this.setupEventListeners()\n  }\n\n  private async loadCurrentPageData(): Promise<void> {\n    try {\n      const tabs = await browser.tabs.query({active: true, currentWindow: true})\n      const tab = tabs[0]\n\n      if (tab?.id) {\n        const response = await browser.tabs.sendMessage(tab.id, {type: 'GET_PAGE_DATA'}) as PostData\n        if (response) {\n          this.populateForm(response)\n        }\n      }\n    } catch (error) {\n      console.error('Failed to load page data:', error)\n      // Fallback to tab info\n      const tabs = await browser.tabs.query({active: true, currentWindow: true})\n      const tab = tabs[0]\n      if (tab) {\n        this.titleInput.value = tab.title ?? ''\n      }\n    }\n  }\n\n  private populateForm(data: PostData): void {\n    this.titleInput.value = data.title ?? ''\n    this.descriptionTextarea.value = data.description ?? ''\n  }\n\n  private setupEventListeners(): void {\n    this.postButton.addEventListener('click', this.handlePost.bind(this))\n  }\n\n  private async handlePost(): Promise<void> {\n    this.postButton.disabled = true\n    this.postButton.textContent = '投稿中...'\n\n    try {\n      const postData = await this.collectFormData()\n      const selectedServices = this.getSelectedServices()\n\n      console.log('Posting to services:', selectedServices, postData)\n\n      const response = await browser.runtime.sendMessage({\n        type: 'POST_TO_SERVICES',\n        data: {postData, services: selectedServices},\n      }) as {results: Array<{service: string; success: boolean; error?: string; url?: string}>}\n\n      if (response?.results) {\n        const successCount = response.results.filter(r => r.success).length\n        const totalCount = response.results.length\n\n        if (successCount === totalCount) {\n          this.postButton.textContent = '投稿完了！'\n          setTimeout(() => {\n            window.close()\n          }, 1000)\n        } else if (successCount > 0) {\n          this.postButton.textContent = `一部成功 (${successCount}/${totalCount})`\n          setTimeout(() => {\n            this.resetPostButton()\n          }, 3000)\n        } else {\n          const errorMessage = response.results[0]?.error ?? 'Unknown error'\n          this.postButton.textContent = `投稿失敗: ${errorMessage}`\n          setTimeout(() => {\n            this.resetPostButton()\n          }, 3000)\n        }\n      } else {\n        throw new Error('Invalid response from background script')\n      }\n    } catch (error) {\n      console.error('Post failed:', error)\n      this.postButton.textContent = '投稿失敗'\n      setTimeout(() => {\n        this.resetPostButton()\n      }, 2000)\n    }\n  }\n\n  private resetPostButton(): void {\n    this.postButton.disabled = false\n    this.postButton.textContent = '投稿する'\n  }\n\n  private async collectFormData(): Promise<PostData> {\n    // Get current tab URL\n    const tabs = await browser.tabs.query({active: true, currentWindow: true})\n    const currentUrl = tabs[0]?.url ?? ''\n\n    return {\n      title: this.titleInput.value,\n      url: currentUrl,\n      description: this.descriptionTextarea.value,\n      tags: this.tagsInput.value.split(',').map(tag => tag.trim()).filter(Boolean),\n    }\n  }\n\n  private getSelectedServices(): string[] {\n    const checkboxes = document.querySelectorAll('.services input[type=\"checkbox\"]:checked')\n    return Array.from(checkboxes).map(checkbox => (checkbox as HTMLInputElement).id)\n  }\n}\n\nvoid new PopupUI()\n"],"names":["PopupUI","__publicField","tab","browser","response","error","data","postData","selectedServices","successCount","r","totalCount","errorMessage","_a","currentUrl","tag","checkboxes","checkbox"],"mappings":"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"}